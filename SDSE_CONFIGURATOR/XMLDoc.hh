// ----------------------------------------------------------------------------
// OpenSDSE - HLA Compliant Distributed Aircraft Simulation
// Copyright (C) 2017  ISAE
//
// This program is free software ; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation ; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY ; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program ; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// ----------------------------------------------------------------------------


#ifndef __XMLDOC_HH_DEF__
#define __XMLDOC_HH_DEF__

#include "SdseParametersParser.hh"
#include "XNode.hh"
#include <string>
#include <vector>

using namespace tinyxml2;
using std::string;
using std::vector;


// ----------------------------------------------------------------------------
// Wrapper for XMLDocument that allows to collect and 
// store more informations on the content.
// ----------------------------------------------------------------------------
class XMLDoc
{
	public:

		XMLDoc();
		XMLDoc(string file_url);
		~XMLDoc();

		// Return the name of the federation
		const char* getFederationName();

		// Find the first federation node
		XMLElement* getFederation();

		
		// Save the current XMLDocument into a file
		void saveToFile(string file_url);

		// Save the current XMLDocument into the file provided
		// to build the XMLDoc in the first place.
		void saveToFile();

		// Set the current selected node, to be retrieved via
		// the getSelectedNode method.
		void setSelectedNode(XNode* node){selectedElement = node;}

		// Return the pointer to the XNode currently selected.
		// Relies on the good use of XMLDoc::setSelectedNode in the
		// first place.
		XNode* getSelectedNode(){return selectedElement;}

	private:

		XMLDocument* mDocument; // DOM generated by tinyxml2, containing the document.
		string mFileUrl;
		XNode* selectedElement; // currently selected element.
};

#endif // __XMLDOC_HH_DEF__
